{"ast":null,"code":"var _jsxFileName = \"D:\\\\Demo_Projects\\\\react-front\\\\src\\\\components\\\\AllProjects\\\\AllProjects.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { Card, Col, Container, Row, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport RestClient from '../../RestAPI/RestClient';\nimport AppUrl from '../../RestAPI/AppUrl';\nimport Loading from '../Loading/Loading';\nimport Failure from '../Failure/Failure';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AllProjects extends Component {\n  constructor() {\n    super();\n    this.state = {\n      myData: [],\n      loading: true,\n      error: false\n    };\n  }\n\n  componentDidMount() {\n    RestClient.GetRequest(AppUrl.ProjectAll).then(result => {\n      if (result == null) {\n        this.setState({\n          error: true,\n          loading: false\n        });\n      } else {\n        this.setState({\n          myData: result,\n          loading: false\n        });\n      }\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  render() {\n    if (this.state.loading == true) {\n      return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 20\n      }, this);\n    } else if (this.state.loading == false) {\n      const MyList = this.state.myData;\n      const MyView = MyList.map(MyList => {\n        return /*#__PURE__*/_jsxDEV(Col, {\n          lg: 4,\n          md: 6,\n          sm: 12,\n          children: [\" \", /*#__PURE__*/_jsxDEV(Card, {\n            className: \"projectCard\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: MyList.img_one\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 89\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [\"   \", /*#__PURE__*/_jsxDEV(Card.Title, {\n                className: \"serviceName\",\n                children: MyList.project_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 150\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"serviceDescription\",\n                children: MyList.project_description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 220\n              }, this), \"  \", /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  className: \"link-style\",\n                  to: \"/projectdetails/\" + MyList.id + \"/\" + MyList.project_name,\n                  children: \" View More \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 330\n                }, this), \"  \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 304\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 136\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 58\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 30\n        }, this);\n      });\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"serviceMainTitle\",\n            children: \"RECENT PROJECTS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: MyView\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this);\n    } else if (this.state.error == true) {\n      return /*#__PURE__*/_jsxDEV(WentWrong, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n}\n\nexport default AllProjects;","map":{"version":3,"sources":["D:/Demo_Projects/react-front/src/components/AllProjects/AllProjects.jsx"],"names":["React","Component","Fragment","Card","Col","Container","Row","Button","Link","RestClient","AppUrl","Loading","Failure","AllProjects","constructor","state","myData","loading","error","componentDidMount","GetRequest","ProjectAll","then","result","setState","catch","render","MyList","MyView","map","img_one","project_name","project_description","id"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { Card, Col, Container, Row, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport RestClient from '../../RestAPI/RestClient';\r\nimport AppUrl from '../../RestAPI/AppUrl';\r\nimport Loading from '../Loading/Loading';\r\nimport Failure from '../Failure/Failure';\r\n\r\nclass AllProjects extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n             myData:[],\r\n             loading:true,\r\n             error:false  \r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        RestClient.GetRequest(AppUrl.ProjectAll).then(result=>{\r\n            if(result == null){\r\n                this.setState({error:true,loading:false})\r\n           }else{\r\n               this.setState({myData:result,loading:false});\r\n            }\r\n        }).catch(error=>{\r\n         this.setState({error:true})\r\n        })  \r\n      \r\n    }\r\n    render() {\r\n        if(this.state.loading==true){ \r\n            return <Loading />\r\n        }\r\n        else if(this.state.loading==false){\r\n                    const MyList = this.state.myData;\r\n                    const MyView = MyList.map(MyList=>{\r\n            \r\n                    return   <Col lg={4} md={6} sm={12}> <Card className=\"projectCard\"> <Card.Img variant=\"top\" src={MyList.img_one} /><Card.Body>   <Card.Title className=\"serviceName\">{MyList.project_name}</Card.Title><Card.Text className=\"serviceDescription\">{MyList.project_description}</Card.Text>  <Button variant=\"primary\"><Link className=\"link-style\" to={\"/projectdetails/\"+MyList.id+\"/\"+MyList.project_name}> View More </Link>  </Button></Card.Body></Card> </Col>\r\n\r\n            })\r\n\r\n\r\n            return (\r\n                <Fragment>\r\n                 <Container className=\"text-center\">\r\n                        <h1 className=\"serviceMainTitle\">RECENT PROJECTS</h1>\r\n                        <div className=\"bottom\"></div>\r\n\r\n                         <Row>\r\n\r\n                             {MyView}\r\n\r\n                        </Row>\r\n\r\n                    </Container>\r\n                </Fragment>\r\n            )\r\n        }\r\n        else if(this.state.error == true){\r\n            return <WentWrong />\r\n          } \r\n    }\r\n}\r\n\r\nexport default AllProjects\r\n"]},"metadata":{},"sourceType":"module"}